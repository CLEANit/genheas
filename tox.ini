[tox]
isolated_build = True
envlist =  lint,  py{36,38},pre-commit
skipsdist = True

[tox:.package]
basepython = python3

[testenv]
whitelist_externals = poetry
skip_install = True
commands =
  poetry install --no-root -v
  poetry run pytest tests/

;    poetry install -vvv
;    poetry run pytest --cov=my_app tests/
;    poetry run coverage report -m

[testenv:black]
description = autoformat  black
skip_install = true
whitelist_externals = poetry
deps =
    black
commands =
    black   --line-length=120 genheas/ tests/


[testenv:isort]

skip_install = true
deps =
    isort
commands =
    isort --recursive  genheas/ tests/

[testenv:autopep8]

skip_install = true
deps =
    autopep8
commands =
    autopep8  --in-place --recursive --aggressive --aggressive  genheas/ tests/


[testenv:flake8]
description = autoformat with flake8
basepython = python
skip_install = true
deps =
    flake8
    flake8-bugbear
    flake8-docstrings>=1.3.1
    flake8-import-order>=0.9
    flake8-typing-imports>=1.1
    pep8-naming
commands =
    flake8 --max-line-length=120 --ignore=D100,E123,E125,N802,N806,F401,W503,C901 genheas/ tests/

[testenv:lint]
description = autoformat  with autopep8  isort and black
skip_install = true
;whitelist_externals = poetry
deps =
    black
    isort
    autopep8
    pylint
    flake8
    flake8-bandit
    flake8-docstrings
    doc8
commands =
   autopep8  --in-place --recursive --aggressive --aggressive --ignore=E123,E125,N802,N806,F401,W503,C901 genheas/ tests/
   isort --recursive genheas/ tests/
   black --line-length=120 genheas/ tests/
;   pylint genheas/ tests/
   doc8 --max-line-length=120 -e .rst docs
;   flake8 --max-line-length=120  --ignore=D100,D103, E123,E125,N802,N806,F401,W503,C901 genheas/ tests/


[black]
line-length = 120
[flake8]
max-line-length = 120

[doc8]
max-line-length = 120

[testenv:pre-commit]
basepython = python
usedevelop = True
deps =
  pre-commit
commands =
  pre-commit run -a

[testenv:doc8]
allowlist_externals = make
description = invoke sphinx-build to build the HTML docs
basepython = python3
skip_install = true
deps =
    sphinx
    doc8
commands =
    doc8 --max-line-length 120 -e .rst docs



;[testenv:docs]
;basepython = python
;usedevelop = True
;#setenv = PYTHONPATH = {toxinidir}/gengenheass
;whitelist_externals = make
;                    /bin/bash
;deps =
;    -r{toxinidir}/docs/requirements.txt
;commands =
;    #make -C docs {posargs: html } BUILDDIR={envdir} "SPHINXOPTS=-W -E -D suppress_warnings=ref.term"
;    make -C docs {posargs: html }
;extras =
;    docs


[testenv:docs]
description = invoke sphinx-build to build the HTML docs
whitelist_externals = poetry
deps =
    -r{toxinidir}/docs/requirements.txt

;commands = poetry run sphinx-build -d "{toxworkdir}/docs_doctree" docs/source "{toxworkdir}/docs_out" --color -bhtml {posargs}
;           python -c 'import pathlib; print("documentation available under file://\{0\}".format(pathlib.Path(r"{toxworkdir}") / "docs_out" / "index.html")))'

commands =
    poetry run sphinx-apidoc -f -o docs/source  ./
    poetry run sphinx-build -d "docs/build/doctree" docs/source "docs/build/html" --color -bhtml {posargs}
;    echo "Build finished. The HTML pages are in docs/build/html/index.html"
    python -c 'import pathlib; print("documentation available under file://\{0\}".format(pathlib.Path(r"docs/build/html/index.html")))'

;commands =
;    make -C docs {posargs: html }

[testenv:linters]
basepython = python
skip_install = true
deps =
    {[testenv:flake8]deps}
    {[testenv:black]deps}
    {[testenv:isort]deps}
    {[testenv:doc8]deps}
commands =
    {[testenv:flake8]commands}
    {[testenv:black]commands}
    {[testenv:isort]commands}
    {[testenv:doc8]commands}

[testenv:pypy]
whitelist_externals =
  bash
  poetry
skip_install = true
commands =
  poetry install -v
  poetry run pytest tests/
;[testenv:mypy]
;deps =
;    mypy
;
;commands =
;    mypy my_app