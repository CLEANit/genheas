[tox]
minversion = 3.12
envlist = py36, isort # py{38, format, flak8,  black, isort, lint, docs, pypy} #pre-commit  format
skipsdist = True



[testenv]
whitelist_externals = poetry
skip_install = True
commands =
  poetry install -v
  poetry run pytest tests/


[testenv:black]
description = autoformat  black
skip_install = true
deps =
    black
commands =
    black --check  gengenheass/ tests/


[testenv:isort]

skip_install = true
deps =
    isort
commands =
    isort --check-only  gengenheass/ tests/


[testenv:flake8]
description = autoformat with flake8
basepython = python
skip_install = true
deps =
    flake8
    flake8-bugbear
    flake8-docstrings>=1.3.1
    flake8-import-order>=0.9
    flake8-typing-imports>=1.1
    pep8-naming
commands =
    flake8 gengenheass/ tests/ setup.py

[testenv:format]
description = autoformat  with autopep8  isort and black
skip_install = true
commands =
    autopep8  --in-place --aggressive --aggressive gengenheass tests setup.py
    isort --recursive gengenheass tests setup.py
    black gengenheass tests setup.py
deps =
    black
    isort
    autopep8


[testenv:pre-commit]
basepython = python
usedevelop = True
deps =
  pre-commit
commands =
  pre-commit run -a

[testenv:doc8]
allowlist_externals = make
description = invoke sphinx-build to build the HTML docs
basepython = python3
skip_install = true
deps =
    sphinx
    doc8
commands =
    doc8 --max-line-length 120 -e .rst docs

[doc8]
max-line-length = 120

[testenv:docs]
basepython = python
usedevelop = True
#setenv = PYTHONPATH = {toxinidir}/gengenheass
whitelist_externals = make
                    /bin/bash
deps =
    -r{toxinidir}/docs/requirements.txt
commands =
    #make -C docs {posargs: html } BUILDDIR={envdir} "SPHINXOPTS=-W -E -D suppress_warnings=ref.term"
    make -C docs {posargs: html }
extras =
    docs

[testenv:linters]
basepython = python
skip_install = true
deps =
    {[testenv:flake8]deps}
    {[testenv:black]deps}
    {[testenv:isort]deps}
    {[testenv:doc8]deps}
commands =
    {[testenv:flake8]commands}
    {[testenv:black]commands}
    {[testenv:isort]commands}
    {[testenv:doc8]commands}

[testenv:pypy]
whitelist_externals =
  bash
  poetry
skip_install = true
commands =
  poetry install -v
  poetry run pytest tests/
