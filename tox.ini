[tox]
minversion = 3.8
envlist = pre-commit #py{36,37,38,39,flak8, black, isort}
skipsdist = True

[testenv]
#setenv = PYTHONPATH = {toxinidir}/hea
usedevelop = false
deps =
  -r{toxinidir}/requirements-dev.txt
commands = pytest  {posargs}
           #pip install -e .[d]
           #coverage erase
           #coverage run -m pytest tests
           #coverage report
changedir={toxinidir}

[testenv:lint]
description = autoformat with flake8 black and isort
skip_install = true
deps =
    #flake8
    black
    isort
    readme_renderer
    check-manifest
commands =
    #flake8 hea/ tests/ setup.py
    isort --check-only --df hea/ tests/ setup.py
    black --check --diff hea/ tests/ setup.py
    python setup.py check -r -s -m
    check-manifest

changedir={toxinidir}

[testenv:black]
description = autoformat  black
skip_install = true
deps =
    black
commands =
    black --check --diff hea/ tests/ setup.py

[testenv:isort]
description = autoformat  black
skip_install = true
deps =
    isort
commands =
    isort --check-only  hea/ tests/ setup.py

[isort]
skip = hea/tests/tests_files/*,hea/training_data/,hea/tools/heatofmixing.py*,hea/tools/miedema.py,hea/tools/property.py

[testenv:flake8]
description = autoformat with flake8
basepython = python3
skip_install = true
deps =
    flake8
    flake8-bugbear
    flake8-docstrings>=1.3.1
    flake8-import-order>=0.9
    flake8-typing-imports>=1.1
    pep8-naming
commands =
    flake8 hea/ tests/ setup.py

[flake8]
show-source = True
# E123, E125 skipped as they are invalid PEP-8.
# N802 skipped (function name should be lowercase)
# N806 skipped (variable in function should be lowercase)
# F401 skipped (imported but unused) after verifying current usage is valid
# W503 skipped line break before binary operator
# C901 skipped: 'MLaunchTool.init' is too complex
ignore = E123,E125,N802,N806,F401,W503,C901
select = B,C,E,F,W,T4,B9
skip_install = true
builtins = _
exclude=hea/tests/tests_files/*, hea/training_data/,  hea/tools/heatofmixing.py*, hea/tools/miedema.py , # venv,.venv,.git,.tox,dist,*lib/python*,*egg,*figures/*,__init__.py,build/*,setup.py,hea/util/*,hea/tests/test_*
count = true
statistics = true
max-line-length = 120
max-complexity = 18






[testenv:pre-commit]
deps =
  pre-commit
commands =
  pre-commit run -a

[testenv:doc8]
allowlist_externals = make
description = invoke sphinx-build to build the HTML docs
basepython = python3
skip_install = true
deps =
    sphinx
    doc8
commands =
    doc8 docs/source/

[testenv:docs]
basepython = python3
allowlist_externals = make
deps =
    -r{toxinidir}/docs/requirements-dev.txt
commands =
  doc8 -e .rst docs  README.rmd
  sphinx-build -W -b html docs/source docs/build/html

[testenv:linters]
basepython = python3
skip_install = true
deps =
    {[testenv:flake8]deps}
    {[testenv:black]deps}
    {[testenv:isort]deps}
    {[testenv:doc8]deps}
commands =
    {[testenv:flake8]commands}
    {[testenv:black]commands}
    {[testenv:isort]deps}
    {[testenv:doc8]commands}

[testenv:packaging]
description =
    Do packagin/distribution. If tag is not present or PEP440 compliant upload to
    PYPI could fail
# `usedevelop = true` overrides `skip_install` instruction, it's unwanted
usedevelop = false
# don't install molecule itself in this env
skip_install = true
deps =
    collective.checkdocs >= 0.2
    pep517 >= 0.5.0
    twine >= 1.14.0
setenv =
commands =
    rm -rfv {toxinidir}/dist/
    python setup.py sdist bdist_wheel
    # metadata validation
    python -m setup checkdocs --verbose
    python -m twine check {toxinidir}/dist/*

[testenv:build]
skip_install = true
commands =
    # clean up build/ and dist/ folders
    python -c 'import shutil; shutil.rmtree("dist", ignore_errors=True)'
    python setup.py clean --all
    # build sdist
    python setup.py sdist --dist-dir {toxinidir}/dist
    # build wheel from sdist
    pip wheel -v --no-deps --no-index --no-build-isolation --wheel-dir {toxinidir}/dist --find-links {toxinidir}/dist hea
deps =
    setuptools
    wheel